JWT: JSON web tokens
 -->consider to be a form of user identifications.i.e..,issued after the initial user authentication takes place
 -->when user completes their login process/authentication, rest api will issue the client application n access token n refresh token.

 -->Access Token expires short time
    ->it sent as JSON, client stores in memory not in local or cookie.
    -> issued at Authorization, client uses for api access until expires, verified with middleware, new token issued at refresh requrest.

 -->Refresh Token expires Long time
    ->it sent as httpOnly cookie, not accessible by js, must have expiry at some point.
    ->Issued at Authorization, Client uses to request new Access Token, Verified with endpoint & database , must allowed to expire or logout.

//node
//// require('crypto').randomBytes(64).toString('hex'): it gives random crypto
